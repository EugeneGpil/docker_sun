version: '3.7'

services:

    php:
        build:
            context: php
            args:
                - PHP_VERSION=${PHP_VERSION}
                - IMAGICK_VERSION=${IMAGICK_VERSION}
                - LIBREOFFICE_VERSION=${LIBREOFFICE_VERSION}
                - LIBREOFFICE_SHORT_VERSION=${LIBREOFFICE_SHORT_VERSION}
        volumes:
            - ${PROJECT_PATH}:/usr/share/nginx/html
        working_dir: /usr/share/nginx/html
        restart: unless-stopped

    workspace:
        build:
            context: workspace
            args:
                - PHP_VERSION=${PHP_VERSION}
                - COMPOSER_VERSION=${COMPOSER_VERSION}
                - REDIS_VERSION=${REDIS_VERSION}
                - IMAGICK_VERSION=${IMAGICK_VERSION}
        volumes:
            - ${PROJECT_PATH}:/usr/share/nginx/html
        working_dir: /usr/share/nginx/html
        tty: true
        extra_hosts:
            - "dockerhost:$DOCKERHOST"
        command:
            - code-server

    redis:

        build:
            context: redis
            args:
                - REDIS_VERSION=${REDIS_VERSION}
        restart: unless-stopped

    nginx:
        build: 
            context: nginx
            args:
                - NGINX_VERSION=${NGINX_VERSION}
        volumes:
            - ${PROJECT_PATH}:/usr/share/nginx/html
        restart: unless-stopped
        ports:
            - ${NGINX_PORT}:80
        environment:
            - NGINX_HOST=localhost
        depends_on:
            - php
    
    mysql:
        build:
            context: mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        command: --default-authentication-plugin=mysql_native_password
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes: 
            - ${MYSQL_DATABASES_PATH}:/var/lib/mysql
            - ${PROJECT_PATH}:/usr/share/nginx/html
        ports:
            - ${MYSQL_PORT}:3306
        working_dir: /usr/share/nginx/html

    adminer:
        image: adminer
        ports:
            - ${ADMINER_PORT}:8080

    mongo:
        build:
            context: mongo
            args:
                - MONGO_VERSION=${MONGO_VERSION}
        restart: unless-stopped
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            ME_CONFIG_MONGODB_SERVER: mongo
        volumes: 
            - ${MONGO_DATABASES_PATH}:/var/lib/mongodb

    mongo-express:
        image: mongo-express
        ports:
            - ${MONGO_EXPRESS_PORT}:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
        depends_on:
            - mongo

    # node:
    #     build: 
    #         context: node
    #         args:
    #             - NODE_VERSION=${NODE_VERSION}
    #     restart: unless-stopped
    #     ports:
    #         - ${NUXT_PORT}:3009
    #     volumes: 
    #         - ${PROJECT_PATH}:/project
    #     working_dir: /project${NUXT_PATH}

